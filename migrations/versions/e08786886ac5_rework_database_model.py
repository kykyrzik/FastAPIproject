"""rework database model

Revision ID: e08786886ac5
Revises: 17638a06106d
Create Date: 2023-11-27 12:29:45.910700

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e08786886ac5'
down_revision: Union[str, None] = '17638a06106d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_author_id'), 'author', ['id'], unique=False)
    op.create_table('book',
    sa.Column('ISBN', sa.VARCHAR(length=17), nullable=False),
    sa.Column('name_book', sa.VARCHAR(length=50), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.SMALLINT(), nullable=False),
    sa.Column('publisher', sa.String(), nullable=False),
    sa.Column('publication_date', sa.Integer(), nullable=True),
    sa.Column('book_circulation', sa.Integer(), nullable=True),
    sa.Column('unit_price', sa.DECIMAL(precision=6, scale=2), nullable=False),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('rars', sa.String(), nullable=False),
    sa.Column('number_of_pages', sa.Integer(), nullable=False),
    sa.Column('cover_type', sa.String(), nullable=False),
    sa.Column('amount_book', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ISBN')
    )
    op.create_index(op.f('ix_book_name_book'), 'book', ['name_book'], unique=False)
    op.drop_index('ix_rars_id', table_name='rars')
    op.drop_table('rars')
    op.drop_index('ix_publisher_id', table_name='publisher')
    op.drop_table('publisher')
    op.create_foreign_key(None, 'item', 'book', ['book_id'], ['ISBN'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'item', type_='foreignkey')
    op.create_table('publisher',
    sa.Column('id', sa.SMALLINT(), server_default=sa.text("nextval('publisher_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('publisher_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='publisher_pkey'),
    sa.UniqueConstraint('publisher_name', name='publisher_publisher_name_key')
    )
    op.create_index('ix_publisher_id', 'publisher', ['id'], unique=False)
    op.create_table('rars',
    sa.Column('id', sa.SMALLINT(), server_default=sa.text("nextval('rars_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('rating', sa.VARCHAR(length=3), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='rars_pkey'),
    sa.UniqueConstraint('rating', name='rars_rating_key')
    )
    op.create_index('ix_rars_id', 'rars', ['id'], unique=False)
    op.drop_index(op.f('ix_book_name_book'), table_name='book')
    op.drop_table('book')
    op.drop_index(op.f('ix_author_id'), table_name='author')
    op.drop_table('author')
    # ### end Alembic commands ###
